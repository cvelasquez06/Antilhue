#!/bin/bash
IFS=""
year=$(date +%Y)
monthNow=$(date +"%m")
role=$1
directoryScript=$2
directoryExclude=$3
directoryDestinationBackup=$4
directoryRootTotal=$5
dirLogs=$6
shift
shift
shift
shift
shift
shift
array=( "$@" )
	for registers in ${array[@]}; do
		name=$(echo $registers | awk -F"," '{print $1}' )
		directoryToBackup=$(echo $registers | awk -F"," '{print $2}' )
		script=$(echo $registers | awk -F"," '{print $3}' )
		maxSizeFiles=$(echo $registers | awk -F"," '{print $4}' )
	 	excludeBackup=$(echo $registers | awk -F"," '{print $5}' )

	 	module/logs write "" $dirLogs $role
	 	module/logs write "START_FILE $name" $dirLogs $role
	 	
	 	if [ "$excludeBackup" != "" ];then
			module/file check $directoryExclude$excludeBackup $dirLogs $role
			if [ $? -ne 1 ];then
				excludeBackup=$directoryExclude$excludeBackup
			fi
		else
			excludeBackup="/tmp"
	    fi

		if [ "$maxSizeFiles" = "" ]; then maxSizeFiles=1000G; fi

		if [ "$script" != "" ]; then
			module/script check $directoryScript$script $dirLogs $role
			if [ $? -ne 1 ];then
				module/logs write "execute script $script" $dirLogs $role
				start=$(date +'%s')
				module/script run $directoryScript$script
				time_elapsed=$(($(date +'%s') - $start))
				module/logs write "$time_elapsed second" $dirLogs $role
			fi
		fi
		
		dirDestinationBackupAll=$directoryDestinationBackup
		module/directory check $dirDestinationBackupAll $dirLogs $role
		if [ $? -eq 1 ];then
			module/directory create $dirDestinationBackupAll
			module/directory check $dirDestinationBackupAll $dirLogs $role
			if [ $? -eq 1 ];then break;	fi
		fi
		
		module/directory check $dirDestinationBackupAll$directoryToBackup $dirLogs $role
		if [ $? -eq 1 ];then
			module/directory create $dirDestinationBackupAll$directoryToBackup $dirLogs $role
			module/directory check $dirDestinationBackupAll$directoryToBackup $dirLogs $role
			if [ $? -eq 1 ];then break; fi
		fi

		#module/rsync $role $maxSizeFiles $directoryToBackup $dirDestinationBackupAll $excludeBackup $directoryRootTotal $dirLogs

		module/logs write "END_FILE $name" $dirLogs $role
		module/logs write "" $dirLogs $role
	done
